{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","bookstore/tests/helpers/ember-power-select.js","bookstore/tests/integration/components/book-cover-test.js","bookstore/tests/lint/app.lint-test.js","bookstore/tests/lint/templates.template.lint-test.js","bookstore/tests/lint/tests.lint-test.js","bookstore/tests/test-helper.js","bookstore/tests/unit/adapters/author-test.js","bookstore/tests/unit/controllers/books-test.js","bookstore/tests/unit/models/author-test.js","bookstore/tests/unit/models/book-test.js","bookstore/tests/unit/models/publisher-test.js","bookstore/tests/unit/models/publishing-house-test.js","bookstore/tests/unit/routes/application-test.js","bookstore/tests/unit/routes/author-test.js","bookstore/tests/unit/routes/books-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"bookstore/tests/helpers/ember-power-select\", [\"exports\", \"ember-power-select/test-support/helpers\"], function (_exports, _helpers) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = deprecatedRegisterHelpers;\n  _exports.selectChoose = _exports.touchTrigger = _exports.nativeTouch = _exports.clickTrigger = _exports.typeInSearch = _exports.triggerKeydown = _exports.nativeMouseUp = _exports.nativeMouseDown = _exports.findContains = void 0;\n\n  function deprecateHelper(fn, name) {\n    return function (...args) {\n      (true && !(false) && Ember.deprecate(`DEPRECATED \\`import { ${name} } from '../../tests/helpers/ember-power-select';\\` is deprecated. Please, replace it with \\`import { ${name} } from 'ember-power-select/test-support/helpers';\\``, false, {\n        until: '1.11.0',\n        id: `ember-power-select-test-support-${name}`\n      }));\n      return fn(...args);\n    };\n  }\n\n  let findContains = deprecateHelper(_helpers.findContains, 'findContains');\n  _exports.findContains = findContains;\n  let nativeMouseDown = deprecateHelper(_helpers.nativeMouseDown, 'nativeMouseDown');\n  _exports.nativeMouseDown = nativeMouseDown;\n  let nativeMouseUp = deprecateHelper(_helpers.nativeMouseUp, 'nativeMouseUp');\n  _exports.nativeMouseUp = nativeMouseUp;\n  let triggerKeydown = deprecateHelper(_helpers.triggerKeydown, 'triggerKeydown');\n  _exports.triggerKeydown = triggerKeydown;\n  let typeInSearch = deprecateHelper(_helpers.typeInSearch, 'typeInSearch');\n  _exports.typeInSearch = typeInSearch;\n  let clickTrigger = deprecateHelper(_helpers.clickTrigger, 'clickTrigger');\n  _exports.clickTrigger = clickTrigger;\n  let nativeTouch = deprecateHelper(_helpers.nativeTouch, 'nativeTouch');\n  _exports.nativeTouch = nativeTouch;\n  let touchTrigger = deprecateHelper(_helpers.touchTrigger, 'touchTrigger');\n  _exports.touchTrigger = touchTrigger;\n  let selectChoose = deprecateHelper(_helpers.selectChoose, 'selectChoose');\n  _exports.selectChoose = selectChoose;\n\n  function deprecatedRegisterHelpers() {\n    (true && !(false) && Ember.deprecate(\"DEPRECATED `import registerPowerSelectHelpers from '../../tests/helpers/ember-power-select';` is deprecated. Please, replace it with `import registerPowerSelectHelpers from 'ember-power-select/test-support/helpers';`\", false, {\n      until: '1.11.0',\n      id: 'ember-power-select-test-support-register-helpers'\n    }));\n    return (0, _helpers.default)();\n  }\n});","define(\"bookstore/tests/integration/components/book-cover-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | book-cover', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <BookCover />\n      */\n      {\n        id: \"T46WFf5+\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[5,\\\"book-cover\\\",[],[[],[]]]],\\\"hasEval\\\":false}\",\n        meta: {}\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <BookCover>\n              template block text\n            </BookCover>\n          \n      */\n      {\n        id: \"vB7r0+Ja\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n      \\\"],[5,\\\"book-cover\\\",[],[[],[]],{\\\"statements\\\":[[0,\\\"\\\\n        template block text\\\\n      \\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false}\",\n        meta: {}\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"bookstore/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('adapters/author.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/author.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/book-cover.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/book-cover.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('controllers/books.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/books.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('models/author.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/author.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('models/book.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/book.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('models/publisher.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/publisher.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('models/publishing-house.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/publishing-house.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/author.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/author.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/books.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/books.js should pass ESLint\\n\\n');\n  });\n});","define(\"bookstore/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('bookstore/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'bookstore/templates/application.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('bookstore/templates/author.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'bookstore/templates/author.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('bookstore/templates/books.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'bookstore/templates/books.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('bookstore/templates/components/book-cover.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'bookstore/templates/components/book-cover.hbs should pass TemplateLint.\\n\\n');\n  });\n});","define(\"bookstore/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('integration/components/book-cover-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/book-cover-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/adapters/author-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/author-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/controllers/books-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/books-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/models/author-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/author-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/models/book-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/book-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/models/publisher-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/publisher-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/models/publishing-house-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/publishing-house-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/application-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/author-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/author-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/books-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/books-test.js should pass ESLint\\n\\n');\n  });\n});","define(\"bookstore/tests/test-helper\", [\"bookstore/app\", \"bookstore/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"bookstore/tests/unit/adapters/author-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Adapter | author', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let adapter = this.owner.lookup('adapter:author');\n      assert.ok(adapter);\n    });\n  });\n});","define(\"bookstore/tests/unit/controllers/books-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Controller | books', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:books');\n      assert.ok(controller);\n    });\n  });\n});","define(\"bookstore/tests/unit/models/author-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | author', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('author', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"bookstore/tests/unit/models/book-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | book', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('book', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"bookstore/tests/unit/models/publisher-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | publisher', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('publisher', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"bookstore/tests/unit/models/publishing-house-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | publishing house', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('publishing-house', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"bookstore/tests/unit/routes/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:application');\n      assert.ok(route);\n    });\n  });\n});","define(\"bookstore/tests/unit/routes/author-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | author', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:author');\n      assert.ok(route);\n    });\n  });\n});","define(\"bookstore/tests/unit/routes/books-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | books', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:books');\n      assert.ok(route);\n    });\n  });\n});","define('bookstore/config/environment', [], function() {\n  var prefix = 'bookstore';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('bookstore/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}